name: CI - TESTE

on:
  repository_dispatch:
    types: [CI_TESTE]

permissions:
  actions: read
  contents: read

jobs:
  upload-apps:
    runs-on: ubuntu-latest
    env:
      BS_USER: ${{ secrets.BROWSERSTACK_USERNAME }}
      BS_KEY:  ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
    steps:
      - name: Download Android APK artifact
        if: ${{ github.event.client_payload.artifacts.android }}
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repo:   ${{ github.event.client_payload.source_full_repo }}
          run_id: ${{ github.event.client_payload.workflow_run_id }}
          name:   ${{ github.event.client_payload.artifact_names.android_apk }}
          path: ./apk
          if_no_artifact_found: error
          search_artifacts: false
          check_artifacts: true

      - name: Download iOS IPA artifact
        if: ${{ github.event.client_payload.artifacts.ios }}
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repo:   ${{ github.event.client_payload.source_full_repo }}
          run_id: ${{ github.event.client_payload.workflow_run_id }}
          name:   ${{ github.event.client_payload.artifact_names.ios_ipa }}
          path: ./ipa
          if_no_artifact_found: error
          search_artifacts: false
          check_artifacts: true

      - name: Upload APK to BrowserStack Automated
        if: ${{ github.event.client_payload.artifacts.android }}
        id: upload-apk
        run: |
          set -euo pipefail
          APK_FILE=$(ls ./apk/*.apk | head -n 1 || true)
          if [ -z "$APK_FILE" ]; then echo "Nenhum APK encontrado"; exit 1; fi
          RESP=$(curl -s -u "$BS_USER:$BS_KEY" -X POST "https://api-cloud.browserstack.com/app-automate/upload" -F "file=@$APK_FILE")
          echo "$RESP"
          APP_URL=$(echo "$RESP" | jq -r '.app_url // empty')
          if [ -z "$APP_URL" ]; then echo "Falha ao obter app_url"; exit 1; fi
          echo "app_url=$APP_URL" >> "$GITHUB_OUTPUT"

      - name: Upload IPA to BrowserStack Automated
        if: ${{ github.event.client_payload.artifacts.ios }}
        id: upload-ipa
        run: |
          set -euo pipefail
          IPA_FILE=$(ls ./ipa/*.ipa | head -n 1 || true)
          if [ -z "$IPA_FILE" ]; then echo "Nenhum IPA encontrado"; exit 1; fi
          RESP=$(curl -s -u "$BS_USER:$BS_KEY" -X POST "https://api-cloud.browserstack.com/app-automate/upload" -F "file=@$IPA_FILE")
          echo "$RESP"
          APP_URL=$(echo "$RESP" | jq -r '.app_url // empty')
          if [ -z "$APP_URL" ]; then echo "Falha ao obter app_url"; exit 1; fi
          echo "app_url=$APP_URL" >> "$GITHUB_OUTPUT"

      - name: Summary
        run: |
          {
            echo "### BrowserStack Upload Summary"
            echo ""
            echo "**Source repo:** ${{ github.event.client_payload.source_full_repo }}"
            echo "**Run ID:**      ${{ github.event.client_payload.workflow_run_id }}"
            echo "**Platform:**    ${{ github.event.client_payload.platform }}"
            echo "**Version:**     ${{ github.event.client_payload.version }}"
            echo "**Build:**       ${{ github.event.client_payload.build }}"
            if [ "${{ github.event.client_payload.artifacts.android }}" = "true" ] || [ "${{ github.event.client_payload.artifacts.android }}" = "True" ]; then
              echo ""
              echo "- **Android APK URL:** \`${{ steps.upload-apk.outputs.app_url }}\`"
            fi
            if [ "${{ github.event.client_payload.artifacts.ios }}" = "true" ] || [ "${{ github.event.client_payload.artifacts.ios }}" = "True" ]; then
              echo ""
              echo "- **iOS IPA URL:** \`${{ steps.upload-ipa.outputs.app_url }}\`"
            fi
          } >> "$GITHUB_STEP_SUMMARY"
